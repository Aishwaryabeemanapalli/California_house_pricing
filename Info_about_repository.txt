California_house_pricing ML Project.

For creating new repository in Github, I am using all the below checklist in creating new repo.
Add a readme file.
.gitignore template is set to "Python" - The main reason being my coding is entirely done in Python and some of the files that are present in python
need not be commited every single time I am trying to update my code. 
Any license can be picked up. Here we picked - Apache License 2.0


After writing requirements.txt file. You have to configure GIT
git config --global user.name "[USERNAME]"
git config --global user.email "[EMAIL ID]"

Whichever files we don't want to commit we can add them to git ignore file as file path. 

App.py  
We are using predict_api() method to find predictions. 
The json object is used for the data. 
We need to have data.values() because json has data in the form of key-value pairs.
This won't be sufficient so we convert to list. 
With respect to pickling we did, we need to do reshape. So we convert to np.array(list(data.values())).reshape(1,-1)
The reason why we are doing 1,-1 is because this is the single data record we are going to get 
and now we have to take this and do transformation. 
Standardization expects single data record. 
Now we need to import the scaling pickle file. 


We use Heroku to deploy our entire project. 
Always remember that we should add certain configurations to deploy into Heroku. 
For that we need a Procfile. VS Code will understand the extension automatically. 


We also use Docker to deploy:
With the help of the file "Dockerfile", it creates a docker image and runs within a container in any OS which interacts with the kernel of our OS.
Docker is the best tool to avoid configuration issues across multiple machines. With the help 
of docker we can avoid the base config issues.  
Commands: 
FROM, COPY, WORKDIR, RUN, EXPOSE, CMD
FROM python:3.11
COPY . /app
WORKDIR /app
RUN pip install -r requirements.txt
EXPOSE $PORT
CMD gunicorn --workers=4 --bind 0.0.0.0:$PORT app:app

The commands mean that from the base image which is Python:3.11 probably base image in Linux machine we are trying to copy our entire code(denoted by ".") into a folder called app (denoted by "/app") and making it as a working directory. Then we run the command to install all the dependency packages. Finally we expose. Our code is inside a container which is the docker image and to access the application inside the container we have to expose some port. 
Then only we can access the URL. Then we write $PORT to execute the code into the port. 
We use CMD to run the app. We use gunicorn and give the app details to run the app inside Heroku cloud itself. bind is helping to bind the $PORT to our local IP address.

Next we create a folder ".github/workflows" and create a file in this folder called "main.yaml"
The entire configuration to build the docker image is created in main.yaml file

